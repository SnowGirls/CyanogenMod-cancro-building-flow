
拿系统调用 execve 来举例:

SYS_EXECVE        = 59  // { int execve(char *fname, char **argv, char **envv); }


1. 在 bionic/libc 源码的 .S 中会有 ENTRY(execve)

2. 在 kernel 源码会有 SYSCALL_DEFINE3(execve ,其中 3 代表参数个数



另，关于 execve 可参考:
https://blog.csdn.net/tototuzuoquan/article/details/39336681
https://www.q2zy.com/execve、execv、execvp、execle、execl、execlp小结/











######################## Ubuntu 20.04 安装 Cuttlefish ########################

# https://blog.csdn.net/lmaritime/article/details/120426792
# https://source.android.com/docs/setup/create/cuttlefish-use?hl=zh-cn


sudo apt install -y devscripts config-package-dev debhelper-compat golang


https://ci.android.com/builds/submitted/11206184/aosp_cf_x86_64_phone-userdebug/latest
# mkdir Cuttlefish ; cd Cuttlefish/
# Download aosp_cf_x86_64_phone-img-11206184.zip
# Download cvd-host_package.tar.gz 
tar -xvf cvd-host_package.tar.gz
unzip aosp_cf_x86_64_phone-img-11206184.zip


HOME=$PWD ./bin/launch_cvd --daemon


-----------------------------------------
sh: 1: /usr/lib/cuttlefish-common/bin/capability_query.py: not found
VM manager crosvm is not supported on this machine.
Invalid vm_manager: crosvm
-----------------------------------------

ls /usr/lib/cuttlefish-common/bin/  # found nothing, so do the following steps:

git clone https://github.com/google/android-cuttlefish
cd android-cuttlefish

for dir in base frontend; do cd $dir; debuild -i -us -uc -b -d; cd ..; done;


-----------------------------------------
+ [[ 1.13.8 > 1.15 ]]
+ go build -v -ldflags=-w
go: github.com/google/go-cmp@v0.5.9: Get https://proxy.golang.org/github.com/google/go-cmp/@v/v0.5.9.mod: dial tcp [2404:6800:4012:3::2011]:443: i/o timeout
make[1]: *** [debian/rules:26: override_dh_auto_build] Error 1
make[1]: Leaving directory '/home/ubuntu/Downloads/Cuttlefish/android-cuttlefish/frontend'
make: *** [debian/rules:17: build] Error 2
dpkg-buildpackage: error: debian/rules build subprocess returned exit status 2
debuild: fatal error at line 1182:
dpkg-buildpackage -us -uc -ui -i -b -d failed
-----------------------------------------
# debian/rules:26 -> android-cuttlefish/frontend/src/goutil Line 22:
export GOPROXY=https://goproxy.cn


----------------------------------------
dpkg-genchanges: info: binary-only upload (no source code included)
 dpkg-source -i --after-build .
dpkg-buildpackage: info: binary-only upload (no source included)
Now running lintian cuttlefish-frontend_0.9.29_amd64.changes ...
E: cuttlefish-orchestration: depends-on-essential-package-without-using-version depends: bash
E: cuttlefish-orchestration: init.d-script-needs-depends-on-lsb-base etc/init.d/cuttlefish-host_orchestrator (line 32)
E: cuttlefish-user: init.d-script-needs-depends-on-lsb-base etc/init.d/cuttlefish-operator (line 32)
E: cuttlefish-orchestration: maintainer-address-missing Cuttlefish Team
E: cuttlefish-user: maintainer-address-missing Cuttlefish Team
W: cuttlefish-user: binary-without-manpage usr/bin/cvd_host_orchestrator
----------------------------------------
# 这个错就先不管了，继续Google文档后面的步骤先


sudo dpkg -i ./cuttlefish-base_*_*64.deb || sudo apt-get install -f
sudo dpkg -i ./cuttlefish-user_*_*64.deb || sudo apt-get install -f
sudo usermod -aG kvm,cvdnetwork,render $USER
sudo reboot

# 重启后就会发现，ls /usr/lib/cuttlefish-common/bin/ 下面已经有文件了
